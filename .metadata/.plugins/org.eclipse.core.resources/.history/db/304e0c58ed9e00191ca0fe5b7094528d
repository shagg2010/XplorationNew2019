package com.saurabh.dada.iq.impl.companies;

import java.util.HashMap;
import java.util.Map;

public class URLShortner_Microsoft {

	public static void main(String[] args) {
		
		Map<Integer, String> database = new HashMap<Integer, String>();
		database.put(1000001010, "https://www.google.com/");
		int n = database.keySet().iterator().next();
	    String shorturl = idToShortURL(n);
	    System.out.println("Generated short url is " + shorturl);
	    System.out.println("Id from url is " + shortURLtoID(shorturl));

	}
	
	// Function to generate a short url from intger ID
	public static String idToShortURL(int n)
	{
	    // Map to store 62 possible characters
	    char map[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".toCharArray();
	 
	    StringBuffer shorturl = new StringBuffer();
	 
	    // Convert given integer id to a base 62 number
	    while (n>0){
	        // use above map to store actual character in short url
	    	int a = n%62;
	        shorturl.append(map[a]);
	        n = n/62;
	        System.out.println("a: " + a + "\tn: " + n) ;
	    }
	 
	    // Reverse shortURL to complete base conversion
	    shorturl.reverse();
	 
	    return shorturl.toString();
	}

	public static int shortURLtoID(String shortURL){
	    int id = 0; // initialize result
	 
	    // A simple base conversion logic
	    for (int i=0; i < shortURL.length(); i++){
	        if ('a' <= shortURL.charAt(i) && shortURL.charAt(i) <= 'z')
	          id = id*62 + shortURL.charAt(i) - 'a';
	        if ('A' <= shortURL.charAt(i) && shortURL.charAt(i) <= 'Z')
	          id = id*62 + shortURL.charAt(i) - 'A' + 26;
	        if ('0' <= shortURL.charAt(i) && shortURL.charAt(i) <= '9')
	          id = id*62 + shortURL.charAt(i) - '0' + 52;
	        System.out.println("id: " + id);
	    }
	    return id;
	}
	
}
