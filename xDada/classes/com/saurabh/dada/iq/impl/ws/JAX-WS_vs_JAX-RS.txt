SOAP Web Services are standard-based and supported by almost every software platform: They rely heavily in XML and have support for 
transactions, security, asynchronous messages and many other issues. It’s a pretty big and complicated standard, 
but covers almost every messaging situation. 
On the other side, RESTful services relies of HTTP protocol and verbs (GET, POST, PUT, DELETE) to interchange messages in any format, 
preferable JSON and XML. It’s a pretty simple and elegant architectural approach.
As in every topic in the Java World, there are several libraries to build/consume Web Services. 
In the SOAP Side you have the JAX-WS standard and Apache Axis, and in REST you can use Restlets or Spring REST Facilities among other libraries.

RESTful Services are appropiate in this scenarios:
If you have limited bandwidth
If your operations are stateless: No information is preserved from one invocation to the next one, and each request is treated independently.
If your clients require caching.

While SOAP is the way to go when:
If you require asynchronous processing
If you need formal contract/Interfaces
In your service operations are stateful: For example, you store information/data on a request and use that stored data on the next one.

REST vs SOAP Web Services
-------------------------
Web
I am seeing a lot of new web services are implemented using a REST style architecture these days rather than a SOAP one. 
Lets step back a second and explain what REST is.

What is a REST Web Service
The acronym REST stands for Representational State Transfer, this basically means that each unique URL is a representation of some object. 
You can get the contents of that object using an HTTP GET, to delete it, you then might use a POST, PUT, or DELETE to modify the object 
(in practice most of the services use a POST for this).

Who's using REST?
All of Yahoo's web services use REST, including Flickr, del.icio.us API uses it, pubsub, bloglines, technorati, and both eBay, 
and Amazon have web services for both REST and SOAP.

Who's using SOAP?
Google seams to be consistent in implementing their web services to use SOAP, with the exception of Blogger, 
which uses XML-RPC. You will find SOAP web services in lots of enterprise software as well.

REST vs SOAP
As you may have noticed the companies I mentioned that are using REST api's haven't been around for very long, 
and their apis came out this year mostly. So REST is definitely the trendy way to create a web service, if creating web services 
could ever be trendy (lets face it you use soap to wash, and you rest when your tired). 

The main advantages of REST web services are:
Lightweight - not a lot of extra xml markup
Human Readable Results
Easy to build - no toolkits required

SOAP also has some advantages:
Easy to consume - sometimes
Rigid - type checking, adheres to a contract
Development tools

For consuming web services, its sometimes a toss up between which is easier. For instance Google's AdWords web service is really hard 
to consume, it uses SOAP headers, and a number of other things that make it kind of difficult. On the converse, Amazon's 
REST web service can sometimes be tricky to parse because it can be highly nested, and the result schema can vary quite a bit based 
on what you search for.